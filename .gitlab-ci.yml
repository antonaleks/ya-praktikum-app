stages:
  - build
  - release

build-code-job:  # задача с именем build-code-job
  stage: build   # этап build
  script:        # объявление скрипта
    - echo "ARTIFACT_JOB_ID=${CI_JOB_ID}" > CI_JOB_ID.txt  # сохранение номера задачи в файл, чтобы в дальнейшем использовать для копирования артефакта  
    - cd backend 
    - mvn package -Dmaven.repo.local=${CI_PROJECT_DIR}/.m2/repository # запуск сборки кода
    - cd ../frontend 
    - npm install # загрузка всех сторонних зависимостей
    - npm run build # запуск сборки кода
    - cd .. 
    - mkdir sausage-store-0.0.1  # создание директории, в которую копируются артефакты. Это нужно для организации удобной структуры архива
    - mv backend/target/sausage-store-0.0.1-SNAPSHOT.jar sausage-store-0.0.1/sausage-store-0.0.1.jar # копирование собранного бэкенда
    - mv frontend/dist/frontend sausage-store-0.0.1/public_html # копирование собранного фронтэнда
  artifacts:
    paths:
      - sausage-store-0.0.1/public_html  # сохранение собранного фронтэнда как артефакт
      - sausage-store-0.0.1/sausage-store-0.0.1.jar # сохранение собранного бэкенда как артефакт
    reports:
      dotenv: CI_JOB_ID.txt # сохранение файла с переменными как артефакт

upload-release: # задача с именем upload-release
  stage: release # этап release
  # only: # запуск этого шага только при изменениях в директориях backend и frontend
  #   changes:
  #   - backend//*
  #   - frontend//*
  script: 
    - echo "Get artifact from job ${ARTIFACT_JOB_ID}" 
    - > # скачивание артефакта в файл sausage-store-0.0.1.zip
      curl --location --output sausage-store-0.0.1.zip -H "PRIVATE-TOKEN: ${MY_TOKEN}" 
      "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/jobs/${ARTIFACT_JOB_ID}/artifacts"
    - > # сохранение артефакта в package registry
      curl -sSL -H "JOB-TOKEN: ${CI_JOB_TOKEN}" 
      -T sausage-store-0.0.1.zip "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/sausage-store/${CI_COMMIT_SHA}/"
    - > # уведомление в slack о выполнении пайплайна
      curl -X POST -H "Content-type: application/json" --data "{\"text\":\"$CI_COMMIT_BRANCH of $CI_PROJECT_TITLE from $GITLAB_USER_LOGIN\"}" ${NOTIFY_SLACK_URL}
